name: MSBuild

on: 
  push:
    branches: [main]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: X64
  ARTIFACT_NAME: main-windows-x64.zip

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration="${{env.BUILD_CONFIGURATION}};Platform=${{env.BUILD_PLATFORM}}" ${{env.SOLUTION_FILE_PATH}}

    - name: Test
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        @echo off
        set outputDir=%SOLUTION_FILE_PATH%build\output\%BUILD_PLATFORM%\%BUILD_CONFIGURATION%\

        for %%d in (%outputDir%test\*Test.exe) do (
            %%d
        )

    - name: Package
      run: 7z a ${{env.ARTIFACT_NAME}} build\output\${{env.BUILD_PLATFORM}}\${{env.BUILD_CONFIGURATION}}\DX12WithTest\DX12WithTest.exe

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.ARTIFACT_NAME}}
        path: ${{env.ARTIFACT_NAME}}

    - name: Release
      uses: actions/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/release')
      with:
        body_path: CHANGELOG.md
        files: |
          ${{env.ARTIFACT_NAME}}
